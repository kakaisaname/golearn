hash 包提供了实现散列函数所需的接口。

Hash 是实现散列函数所需的公共接口。

type Hash interface {
    // 通过 Write 方法将更多数据添加到正在运行的散列当中。
    // 这个方法不会返回错误。
    // Write 方法通过嵌入 io.Writer 接口来实现。
    io.Writer

    // 将当前散列追加至 b 的末尾，并返回结果切片。
    // 这一操作不会改变底层散列的状态。
    Sum(b []byte) []byte

    // 将散列重置至初始化状态。
    Reset()

    // 返回 Sum 会返回的字节数。
    Size() int

    // 返回散列的底层块大小。
    // Write 必须能够接受任何大小的数据，
    // 但如果写入的数据量总是块大小的某个倍数的话，
    // 那么写入就会变得更为高效。
    BlockSize() int
}

adler32

软件包adler32实现Adler-32校验和。

crc32

Package crc32实现32位循环冗余校验或CRC-32校验和。

crc64

Package crc64实现64位循环冗余校验或CRC-64校验和。

fnv

Package fnv实现了由Glenn Fowler，Landon Curt Noll和Phong Vo创建的FNV-1和FNV-1a，非加密散列函数。